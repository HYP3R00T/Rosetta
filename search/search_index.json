{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Rosetta","text":""},{"location":"#why-rosetta","title":"Why \"Rosetta\"?","text":"<p>The Rosetta Stone was a groundbreaking artifact that unlocked the understanding of ancient Egyptian hieroglyphs, enabling humanity to bridge the gap between lost and known languages. Similarly, this repository, Rosetta, serves as a tool for unlocking and sharing knowledge\u2014bridging my personal learning with the wider community.</p> <p>Just as the Rosetta Stone revealed complex systems of understanding, this project aspires to organize, manage, and share insights in a structured, reusable way. It's not just a repository; it's a gateway to learning, collaboration, and discovery.</p>"},{"location":"Notes/GitHub%20Action/Conditions%20to%20control%20job%20execution/","title":"Conditions to Control Job Execution","text":"","tags":["github-action","yaml"]},{"location":"Notes/GitHub%20Action/Conditions%20to%20control%20job%20execution/#references","title":"References:","text":"<ul> <li>Using conditions to control job execution</li> <li>Accessing contextual information about workflow runs</li> <li>Webhook events and payloads</li> </ul>","tags":["github-action","yaml"]},{"location":"Notes/GitHub%20Action/GitHub%20Action%20for%20Mkdocs/","title":"GitHub Action for Mkdocs","text":"<p>Create a new <code>.yml</code> file in <code>.github/workflows</code> in the root directory. Goto GitHub Pages ensure that the source for build and deployment is \"Deploy from a branch\". Then change the branch and set it as \"gh-pages\" after triggering the github action.  </p> <p>In the snippet we are using python-poetry to manage the project. </p> <pre><code>name: MkDocs Publish\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main # Change this to your main branch name\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up Python\n        uses: actions/setup-python@v4\n        with:\n          python-version: \"3.12\"\n\n      - name: Install Poetry\n        run: |\n          curl -sSL https://install.python-poetry.org | python3 -\n\n      - name: Install dependencies\n        run: |\n          poetry install --no-root\n\n      - name: Build and deploy\n        run: |\n          poetry run mkdocs build --verbose\n          poetry run mkdocs gh-deploy --verbose --force\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n</code></pre>","tags":["github-action","mkdocs","poetry","python"]},{"location":"Notes/Kubernetes/Setup%20Rancher%20Desktop%20in%20Windows%20with%20WSL2/","title":"Setup Rancher Desktop in Windows with WSL2","text":"<ul> <li>Ensure that wsl2 is enable and install some distro.</li> <li>Download the app and install it. Make sure competitive apps such as Docker Desktop is not running (I had to uninstall it completely).</li> </ul> <p><code>shell - wsl2 \u276f kubectl version Client Version: v1.31.3 Kustomize Version: v5.4.2 Unable to connect to the server: tls: failed to verify certificate: x509: certificate is valid for desktop-d4ctseb, gateway.rancher-desktop.internal, host.docker.internal, host.rancher-desktop.internal, kubernetes, kubernetes.default, kubernetes.default.svc, kubernetes.default.svc.cluster.local, localhost, not kubernetes.docker.internal</code></p>"},{"location":"Notes/Kubernetes/Setup%20Rancher%20Desktop%20in%20Windows%20with%20WSL2/#references","title":"References:","text":"<ul> <li>https://docs.rancherdesktop.io/</li> </ul>"},{"location":"Notes/PowerShell/PowerShell%20Alias/","title":"PowerShell Alias","text":"<ul> <li>Open the profile using <code>code $PROFILE</code>. </li> <li>Create a new function. </li> </ul> <pre><code># Functions\nfunction myfunc {\n    Set-Location -Path \"C:\\add\\path\\here\"\n}\n</code></pre> <ul> <li>Create a new alias and set it for this function.</li> </ul> <pre><code># Aliases\nNew-Alias cdr cd_into_rosetta\n</code></pre>","tags":["pwsh"]},{"location":"Notes/PowerShell/PowerShell%20Alias/#note","title":"Note:","text":"<ul> <li>Aliases created by using\u00a0<code>New-Alias</code>\u00a0are not saved after you exit the session or close PowerShell.</li> <li>Either use <code>Export-Alias</code> cmdlet to save alias information or use <code>Set-Alias</code>.</li> </ul>","tags":["pwsh"]},{"location":"Notes/PowerShell/PowerShell%20Alias/#references","title":"References:","text":"<ul> <li>Set-Alias</li> </ul>","tags":["pwsh"]},{"location":"Resources/Kubernetes/","title":"Kubernetes","text":""},{"location":"Resources/Kubernetes/#links","title":"Links","text":"<ul> <li>Rancher Desktop - Use it to learn things in personal workstation</li> </ul>"}]}